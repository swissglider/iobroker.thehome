{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": "-- Grafana --",
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "description": "Test for All Sensors on IOBroker with Tags etc",
    "editable": true,
    "gnetId": null,
    "graphTooltip": 2,
    "id": 2,
    "iteration": 1633156161875,
    "links": [],
    "panels": [
      {
        "datasource": null,
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "hue",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "smooth",
              "lineStyle": {
                "fill": "solid"
              },
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": true,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 13,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "id": 2,
        "maxPerRow": 2,
        "options": {
          "legend": {
            "calcs": [
              "lastNotNull",
              "min",
              "max",
              "mean"
            ],
            "displayMode": "table",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single"
          }
        },
        "pluginVersion": "8.1.4",
        "repeat": "adapterName",
        "repeatDirection": "h",
        "targets": [
          {
            "query": "data1 = from(bucket: \"iobroker_battery_stati_bucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"id\"] =~ /${id:regex}/ or \"all\" == \"${id}\")\n  |> filter(fn: (r) => r[\"name\"] =~ /${name:regex}/ or \"all\" == \"${name}\")\n  |> filter(fn: (r) => r[\"adapterName\"] =~ /${adapterName:regex}/ or \"all\" == \"${adapterName}\")\n  |> filter(fn: (r) => r[\"channelName\"] =~ /${channelName:regex}/ or \"all\" == \"${channelName}\")\n  |> filter(fn: (r) => r[\"deviceName\"] =~ /${deviceName:regex}/ or \"all\" == \"${deviceName}\")\n  |> filter(fn: (r) => r[\"role\"] =~ /${role:regex}/ or \"all\" == \"${role}\")\n  |> filter(fn: (r) => r[\"room\"] =~ /${room:regex}/ or \"all\" == \"${room}\")\n  |> filter(fn: (r) => r[\"function\"] =~ /${function:regex}/ or \"all\" == \"${function}\")\n  |> filter(fn: (r) => r[\"value_type\"] == \"number\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last)\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, id:r.id + \"  |  Role: \" + r.role + \"  ||  Name: \" + r.name + \"  |  Room: \" + r.room + \"  |  Function: \" + r.function + \"  |  Unit: \" + r.unit}))\n  |> keep(columns:[\"id\", \"_value\", \"_time\"])\n\ndata1 |> yield()",
            "refId": "A"
          }
        ],
        "title": "${adapterName}",
        "transparent": true,
        "type": "timeseries"
      }
    ],
    "refresh": "",
    "schemaVersion": 30,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "allValue": null,
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"room\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "Room",
          "multi": false,
          "name": "room",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"room\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": null,
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"function\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "Function",
          "multi": false,
          "name": "function",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"function\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": null,
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"role\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "Role",
          "multi": false,
          "name": "role",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"role\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": null,
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"adapterName\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "Adapter Name",
          "multi": false,
          "name": "adapterName",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"adapterName\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": null,
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"channelName\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "Channel Name",
          "multi": false,
          "name": "channelName",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"channelName\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": null,
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"deviceName\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "Device Name",
          "multi": false,
          "name": "deviceName",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"deviceName\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": null,
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"name\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "Name",
          "multi": false,
          "name": "name",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"name\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": "all",
          "current": {
            "selected": false,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": null,
          "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"id\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "description": null,
          "error": null,
          "hide": 0,
          "includeAll": true,
          "label": "ID",
          "multi": true,
          "name": "id",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"iobroker_battery_stati_bucket\",\n  tag: \"id\",\n  predicate: (r) => true,\n  start: -40y\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 1,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Batterie Stati",
    "uid": "OXkwAmv7z",
    "version": 17
  }